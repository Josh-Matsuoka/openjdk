---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  annotations:
    description: Template to produce an imagestream and buildconfig for a Jlink builder image
  name: jlink-builder-template
parameters:
- description: JDK version to produce a jmods image and imagestream for
  name: JDK_VERSION
  value: "11"
  required: true
- description: Application to run the jlink workflow on
  name: APPLICATION
  required: true
- description: Git Ref to run the jlink workflow on
  name: REF
  required: true
- description: Context Dir to use for the jlink workflow
  name: CONTEXT_DIR
  required: true
objects:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    name: ubi9-openjdk-${JDK_VERSION}-jlink
  spec:
    lookupPolicy:
      local: false
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata: 
    name: jlink-builder-jdk-${JDK_VERSION}
    labels:
      app: jlink-builder-jdk-${JDK_VERSION}
  spec:
    source:
      dockerfile: |
        FROM -
        USER 0
        RUN microdnf --setopt=install_weak_deps=0 --setopt=tsflags=nodocs install -y java-${JDK_VERSION}-openjdk-jmods
        RUN mkdir -p /mnt/jrootfs
        RUN microdnf install --installroot /mnt/jrootfs --releasever 9 --setopt install_weak_deps=0 --nodocs -y \
        --config=/etc/dnf/dnf.conf \
        --noplugins \
        --setopt=cachedir=/var/cache \
        --setopt=reposdir=/etc/yum.repos.d \
        --setopt=varsdir=/etc/dnf/vars \
        grep gawk
        RUN rm -rf /mnt/jrootfs/var/cache/* /mnt/jrootfs/var/lib/rpm /mnt/jrootfs/var/lib/dnf
        USER 185
    strategy:
      dockerStrategy:
        from: 
          kind: ImageStreamTag
          name: ubi9-openjdk-${JDK_VERSION}:1.18
    output:
      to:
        kind: ImageStreamTag
        name: ubi9-openjdk-${JDK_VERSION}-jlink:latest
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    name: jlink-s2i-jdk-${JDK_VERSION}
    labels:
      app: jlink-s2i-jdk-${JDK_VERSION}
  spec:
    source:
      type: Git
        git: 
          uri: ${APPLICATION}
          ref: ${REF}
        contextDir: ${CONTEXT_DIR}
  strategy:
    sourceStrategy:
      from:
        kind: ImageStreamTag
        name: ubi9-openjdk-${JDK_VERSION}-jlink:latest # Output Imagestream for Stage 1
        pullPolicy: Always
      env:
        - name: S2I_ENABLE_JLINK
          value: true
        - name: LOGGING_SCRIPT_DEBUG
          value: true
  output:
    to:
      kind: ImageStreamTag
      name: ubi9-openjdk-${JDK_VERSION}-jlink:latest
